# Generated by Django 4.2.15 on 2025-03-18 11:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("countries_plus", "0005_auto_20160224_1804"),
        ("peachjam", "0199_alter_peachjamsettings_options"),
    ]

    operations = [
        migrations.CreateModel(
            name="UserFollowing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_alerted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last alerted at"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to="peachjam.author",
                        verbose_name="author",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to="countries_plus.country",
                        verbose_name="country",
                    ),
                ),
                (
                    "court",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to="peachjam.court",
                        verbose_name="court",
                    ),
                ),
                (
                    "court_class",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to="peachjam.courtclass",
                        verbose_name="court class",
                    ),
                ),
                (
                    "court_registry",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to="peachjam.courtregistry",
                        verbose_name="court registry",
                    ),
                ),
                (
                    "locality",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to="peachjam.locality",
                        verbose_name="locality",
                    ),
                ),
                (
                    "taxonomy_topic",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to="peachjam.taxonomy",
                        verbose_name="taxonomy topic",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="following",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="userfollowing",
            constraint=models.UniqueConstraint(
                condition=models.Q(("court__isnull", False)),
                fields=("user", "court"),
                name="unique_user_court",
            ),
        ),
        migrations.AddConstraint(
            model_name="userfollowing",
            constraint=models.UniqueConstraint(
                condition=models.Q(("author__isnull", False)),
                fields=("user", "author"),
                name="unique_user_author",
            ),
        ),
        migrations.AddConstraint(
            model_name="userfollowing",
            constraint=models.UniqueConstraint(
                condition=models.Q(("court_class__isnull", False)),
                fields=("user", "court_class"),
                name="unique_user_court_class",
            ),
        ),
        migrations.AddConstraint(
            model_name="userfollowing",
            constraint=models.UniqueConstraint(
                condition=models.Q(("court_registry__isnull", False)),
                fields=("user", "court_registry"),
                name="unique_user_court_registry",
            ),
        ),
        migrations.AddConstraint(
            model_name="userfollowing",
            constraint=models.UniqueConstraint(
                condition=models.Q(("country__isnull", False)),
                fields=("user", "country"),
                name="unique_user_country",
            ),
        ),
        migrations.AddConstraint(
            model_name="userfollowing",
            constraint=models.UniqueConstraint(
                condition=models.Q(("locality__isnull", False)),
                fields=("user", "locality"),
                name="unique_user_locality",
            ),
        ),
        migrations.AddConstraint(
            model_name="userfollowing",
            constraint=models.UniqueConstraint(
                condition=models.Q(("taxonomy_topic__isnull", False)),
                fields=("user", "taxonomy_topic"),
                name="unique_user_taxonomy_topic",
            ),
        ),
    ]
