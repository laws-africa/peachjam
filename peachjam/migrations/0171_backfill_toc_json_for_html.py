# Generated by Django 4.2.14 on 2024-10-24 08:06

from django.db import migrations
from lxml import html

from peachjam.analysis.html import generate_toc_json_from_html, wrap_toc_entries_in_divs
from peachjam.xmlutils import parse_html_str


def forwards(apps, schema_editor):
    CoreDocument = apps.get_model("peachjam", "CoreDocument")
    qs = CoreDocument.objects.filter(
        content_html__isnull=False, content_html_is_akn=False
    )
    for doc in qs.order_by("-pk").iterator(100):
        # backfill by mimicking CoreDocument.update_toc_json_from_html
        if doc.content_html:
            print(doc)
            root = parse_html_str(doc.content_html)
            doc.toc_json = generate_toc_json_from_html(root)
            wrap_toc_entries_in_divs(root, doc.toc_json)
            doc.content_html = html.tostring(root, encoding="unicode")
            doc.save(update_fields=["toc_json", "content_html"])


class Migration(migrations.Migration):

    dependencies = [
        ("peachjam", "0170_ratification_updated_at_alter_ratification_table_and_more"),
    ]

    operations = [migrations.RunPython(forwards, migrations.RunPython.noop)]
