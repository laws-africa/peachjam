# Generated by Django 4.2.14 on 2024-08-30 08:50
import os

from django.db import migrations


def forwards(apps, schema_editor):
    from django.conf import settings
    from django_elasticsearch_dsl.registries import registry

    DOC_TYPES = [
        ("Gazette", "Gazette"),
        ("Generic Document", "Document"),
        ("Judgment", "Judgment"),
        ("Legal Instrument", "Legal Instrument"),
        ("Legislation", "Act"),
        ("Book", "Book"),
        ("Journal", "Journal"),
    ]

    if not settings.DEBUG and os.environ.get("ELASTICSEARCH_HOST"):
        for ix in registry.get_indices():
            if not ix._mapping:
                continue

            print(f"Backfilling natures for {ix._name}")

            for doc_type, nature in DOC_TYPES:
                # update all documents of this doc_type that don't have a nature
                # uses English as the default for all the language fields, too
                suffixes = ["", "_en", "_sw", "_fr", "_pt"]
                script = ";".join(
                    f"ctx._source.nature{suffix} = '{nature}'" for suffix in suffixes
                )

                # run raw ES to do the update for this doc_type and nature
                ix.connection.update_by_query(
                    index=ix._name,
                    body={
                        "script": {
                            "source": script,
                        },
                        "query": {
                            "bool": {
                                "must": [
                                    {
                                        "term": {
                                            "doc_type": doc_type,
                                        }
                                    }
                                ],
                                "must_not": {"exists": {"field": "nature"}},
                            }
                        },
                    },
                    wait_for_completion=False,
                )


class Migration(migrations.Migration):

    dependencies = [
        ("peachjam", "0152_alter_coredocument_nature"),
    ]

    operations = [
        migrations.RunPython(forwards, migrations.RunPython.noop),
    ]
