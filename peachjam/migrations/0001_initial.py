# Generated by Django 3.2.13 on 2022-06-27 10:34

import django.db.models.deletion
from django.db import migrations, models

import peachjam.models.attachments


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("background_task", "0002_auto_20170927_1109"),
        ("countries_plus", "0005_auto_20160224_1804"),
        ("languages_plus", "0004_auto_20171214_0004"),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("code", models.SlugField(max_length=255)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="CoreDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "doc_type",
                    models.CharField(
                        choices=[
                            ("core_document", "Core Document"),
                            ("legislation", "Legislation"),
                            ("generic_document", "Generic Document"),
                            ("legal_instrument", "Legal Instrument"),
                            ("judgment", "Judgment"),
                        ],
                        default="core_document",
                        max_length=255,
                    ),
                ),
                ("title", models.CharField(max_length=1024)),
                ("date", models.DateField()),
                ("source_url", models.URLField(blank=True, max_length=2048, null=True)),
                ("citation", models.CharField(blank=True, max_length=1024, null=True)),
                ("content_html", models.TextField(blank=True, null=True)),
                ("content_html_is_akn", models.BooleanField(default=False)),
                ("toc_json", models.JSONField(blank=True, null=True)),
                ("expression_frbr_uri", models.CharField(max_length=1024, unique=True)),
                ("work_frbr_uri", models.CharField(max_length=1024)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "jurisdiction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="countries_plus.country",
                    ),
                ),
                (
                    "language",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="languages_plus.language",
                    ),
                ),
            ],
            options={
                "ordering": ["doc_type", "title"],
            },
        ),
        migrations.CreateModel(
            name="DocumentNature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1024, unique=True)),
                ("description", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="Ingestor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("adapter", models.CharField(max_length=2048)),
                ("last_refreshed_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Predicate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("verb", models.CharField(max_length=100)),
                (
                    "reverse_verb",
                    models.CharField(
                        help_text="Reversed verbal form of the relationship",
                        max_length=100,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Taxonomy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("path", models.CharField(max_length=255, unique=True)),
                ("depth", models.PositiveIntegerField()),
                ("numchild", models.PositiveIntegerField(default=0)),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255)),
            ],
            options={
                "verbose_name_plural": "Taxonomies",
            },
        ),
        migrations.CreateModel(
            name="Work",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("frbr_uri", models.CharField(max_length=1024, unique=True)),
                ("title", models.CharField(max_length=1024)),
            ],
            options={
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="Legislation",
            fields=[
                (
                    "coredocument_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="peachjam.coredocument",
                    ),
                ),
                ("metadata_json", models.JSONField()),
            ],
            options={
                "verbose_name_plural": "Legislation",
            },
            bases=("peachjam.coredocument",),
        ),
        migrations.CreateModel(
            name="SourceFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("filename", models.CharField(max_length=1024)),
                ("mimetype", models.CharField(max_length=1024)),
                (
                    "file",
                    models.FileField(
                        max_length=1024,
                        upload_to=peachjam.models.attachments.file_location,
                    ),
                ),
                (
                    "document",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="source_file",
                        to="peachjam.coredocument",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Locality",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("code", models.CharField(max_length=20)),
                (
                    "jurisdiction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="countries_plus.country",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "localities",
                "ordering": ["name"],
                "unique_together": {("name", "jurisdiction")},
            },
        ),
        migrations.CreateModel(
            name="IngestorSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=2048)),
                ("value", models.CharField(max_length=2048)),
                (
                    "ingestor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="peachjam.ingestor",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Image",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("filename", models.CharField(max_length=1024)),
                ("mimetype", models.CharField(max_length=1024)),
                (
                    "file",
                    models.ImageField(
                        max_length=1024,
                        upload_to=peachjam.models.attachments.file_location,
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="images",
                        to="peachjam.coredocument",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DocumentTopic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="peachjam.coredocument",
                    ),
                ),
                (
                    "topic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="peachjam.taxonomy",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Document Topics",
            },
        ),
        migrations.AddField(
            model_name="coredocument",
            name="locality",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="peachjam.locality",
            ),
        ),
        migrations.AddField(
            model_name="coredocument",
            name="work",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="documents",
                to="peachjam.work",
            ),
        ),
        migrations.CreateModel(
            name="CitationLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("url", models.URLField(max_length=1024)),
                ("target_id", models.CharField(max_length=1024)),
                ("target_selectors", models.JSONField()),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="citation_links",
                        to="peachjam.coredocument",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Relationship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "subject_target_id",
                    models.CharField(blank=True, max_length=1024, null=True),
                ),
                (
                    "object_target_id",
                    models.CharField(blank=True, max_length=1024, null=True),
                ),
                (
                    "object_work",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="peachjam.work",
                    ),
                ),
                (
                    "predicate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="peachjam.predicate",
                    ),
                ),
                (
                    "subject_work",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="peachjam.work",
                    ),
                ),
            ],
            options={
                "unique_together": {
                    (
                        "subject_work",
                        "subject_target_id",
                        "object_work",
                        "object_target_id",
                        "predicate",
                    )
                },
            },
        ),
        migrations.CreateModel(
            name="LegalInstrument",
            fields=[
                (
                    "coredocument_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="peachjam.coredocument",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="peachjam.author",
                    ),
                ),
                (
                    "nature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="peachjam.documentnature",
                    ),
                ),
            ],
            bases=("peachjam.coredocument",),
        ),
        migrations.CreateModel(
            name="GenericDocument",
            fields=[
                (
                    "coredocument_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="peachjam.coredocument",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="peachjam.author",
                    ),
                ),
                (
                    "nature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="peachjam.documentnature",
                    ),
                ),
            ],
            bases=("peachjam.coredocument",),
        ),
    ]
