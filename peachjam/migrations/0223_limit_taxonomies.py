# Generated by Django 4.2.14 on 2025-05-22 13:45

from django.db import migrations


def limit_to_lowest(topics):
    """Limit the topics to the lowest level of the tree. This is used to avoid a document being tagged under
    a parent and a descendant taxonomy topic."""

    # walk bottom up and exclude topics that already have a descendant selected
    selected = []
    for topic in sorted(topics, key=lambda topic: topic.depth, reverse=True):
        if not any(t.path.startswith(topic.path) for t in selected):
            selected.append(topic)

    return selected


def forwards(apps, schema_editor):
    CoreDocument = apps.get_model("peachjam", "CoreDocument")
    DocumentTopic = apps.get_model("peachjam", "DocumentTopic")

    for document in CoreDocument.objects.filter(taxonomies__isnull=False):
        topics = [t.topic for t in document.taxonomies.all()]
        limited_topics = limit_to_lowest(topics)
        if len(topics) != limited_topics:
            DocumentTopic.objects.filter(document=document).delete()
            DocumentTopic.objects.bulk_create(
                [
                    DocumentTopic(document=document, topic=topic)
                    for topic in limited_topics
                ]
            )


class Migration(migrations.Migration):

    dependencies = [
        ("peachjam", "0222_alter_coredocument_options"),
    ]

    operations = [
        migrations.RunPython(forwards, migrations.RunPython.noop),
    ]
