# Generated by Django 3.2.25 on 2024-05-14 06:19

from django.db import migrations
from django.db.models import Q


def backfill_citation_counts(apps, schema_editor):
    Work = apps.get_model("peachjam", "Work")
    ExtractedCitation = apps.get_model("peachjam", "ExtractedCitation")

    qs = Work.objects.filter(
        Q(outgoing_citations__isnull=False) | Q(incoming_citations__isnull=False)
    )
    for work in qs.order_by("-pk").distinct("pk").iterator(256):
        old_n_cited_works = work.n_cited_works
        old_n_citing_works = work.n_citing_works

        work.n_cited_works = (
            ExtractedCitation.objects.filter(
                citing_work=work, target_work__documents__isnull=False
            )
            .order_by("target_work_id")
            .distinct("target_work")
            .count()
        )

        work.n_citing_works = (
            ExtractedCitation.objects.filter(
                target_work=work, citing_work__documents__isnull=False
            )
            .order_by("citing_work_id")
            .distinct("citing_work")
            .count()
        )

        if (
            old_n_cited_works != work.n_cited_works
            or old_n_citing_works != work.n_citing_works
        ):
            work.save(update_fields=["n_cited_works", "n_citing_works"])


class Migration(migrations.Migration):

    dependencies = [
        ("peachjam", "0134_backfill_citation_counts2"),
    ]

    operations = [
        migrations.RunPython(backfill_citation_counts, migrations.RunPython.noop)
    ]
